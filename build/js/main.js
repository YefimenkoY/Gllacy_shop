!function(){new WOW({boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0}).init();$(".slider").slick({dots:!0,infinite:!0,speed:600,autoplaySpeed:3e3,slidesToShow:1,autoplay:!0,adaptiveHeight:!1,arrows:!1}),$(function(){var n=$(".slick-dots li");n.each(function(){var n=$(this);n.on("click",function(n){n.preventDefault();var a=$(this).index()+1,t=$("body");t.attr("class","").addClass("bg-color-"+a)})})})}(),function(){$(function(){var n=$(".button").not(".button--map").not(".button--callback"),a=$(".map .container").offset().top,t=1e3;n.each(function(){var n=$(this);n.on("click",function(n){n.preventDefault(),$("body").animate({scrollTop:a},t,"linear")})})})}(),function(){$(function(){var n=$(".empty"),a=$(".callback"),t=$(".button--map .button__link"),e=a.find(".callback__close"),o=300;t.on("click",function(t){t.preventDefault(),a.addClass("open-popup"),n.add(a).fadeIn(0),setTimeout(function(){a.removeClass("open-popup")},500)}),e.on("click",function(t){t.preventDefault(),n.add(a).fadeOut(o)})})}(),function(){$(function(){var n=$(".nav__item--hover"),a=n.find(".menu"),t=$(".form__submit"),e=t.find(".form__hover"),o=400,i=function(n,a){n.hover(function(){a.css({visibility:"visible"}).stop().fadeIn(o)},function(){a.stop().fadeOut(o)})};i(n,a),i(t,e)})}(),function(){$(function(){var n=/^([a-z0-9_-]+\.)*[a-z0-9_-]+@[a-z0-9_-]+(\.[a-z0-9_-]+)*\.[a-z]{2,6}$/,a=/^[a-zA-Z'][a-zA-Z-' ]+[a-zA-Z']?$/,t=$(".callback__form"),e=t.closest(".callback"),o=$('input[name="e-mail"]'),i=$('input[name="name"]'),u=$("textarea"),c=$('input[name="e-mail"], input[name="name"], textarea'),r=500,s=function(n,a){return a.test(n)},l=function(n,a,t){a?n.val()&&s(n.val(),a)?p(n):(t.preventDefault(),f(e,n)):n.val()?p(n):(t.preventDefault(),f(e,n))},f=function(n,a){n.addClass("error"),a.addClass("error-input"),setTimeout(function(){n.removeClass("error")},r)},p=function(n){n.removeClass("error-input")},v=function(n){var a="/massage";$.ajax({type:"POST",url:a,data:t.serialize(),success:function(n){var a=JSON.parse(n);d(a)}}),n.preventDefault()};t.on("submit",function(t){var e=!0,r=$(".empty"),s=$(".callback");l(o,n,t),l(i,a,t),l(u,!1,t),c.each(function(){var n=$(this);n.is(".error-input")&&(e=!1)}),e&&(v(t),r.add(s).fadeOut(1e3),c.each(function(){var n=$(this);n.val("")}))});var d=function(n){var a='<div class="popup"> <div class="popup__text"> <p>Здравствуйте {{name}}! <br>Ваше сообщение успешно отправлено! </p> </div> </div>',t=a.replace(/{{name}}/g,n.name);$(t).appendTo("body"),$(".popup").fadeIn(r),c.each(function(){var n=$(this);n.val("")}),setTimeout(function(){$(".popup").fadeOut(r).remove()},5e3)}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
